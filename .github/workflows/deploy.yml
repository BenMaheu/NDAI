name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/nda-analyzer

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'beta'

      - name: Build and push image to Artifact Registry
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          cd backend
          gcloud builds submit \
          --config cloudbuild.yaml \
          --substitutions=_HF_TOKEN=${HF_TOKEN},_IMAGE=${IMAGE}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy nda-analyzer \
            --image ${IMAGE} \
            --region europe-west10 \
            --service-account=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }} \
            --add-cloudsql-instances=${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
            --min-instances 1 \
            --memory=2Gi \
            --cpu=4 \
            --allow-unauthenticated \
            --set-env-vars=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --set-env-vars=GCS_BUCKET=${{ secrets.GCS_BUCKET }} \
            --set-env-vars=DATABASE_URL=postgresql+psycopg2://postgres:${{ secrets.DB_PASSWORD }}@/ndai?host=/cloudsql/${{ secrets.CLOUD_SQL_CONNECTION_NAME }}

      - name: Warmup deployed service (health check)
        run: |
            sleep 30
            SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region europe-west10 --format 'value(status.url)')
            echo "Service URL: $SERVICE_URL"
          
            echo "Calling health endpoint..."
            curl -s -o /dev/null -w "%{http_code}" "$SERVICE_URL/health" | grep 200 && \
            echo "✅ Health check succeeded" || \
            (echo "❌ Health check failed" && exit 1)